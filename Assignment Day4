                                                                Assignment 4

***********************************************************************************************************************************************************************
33.	Write a program to demonstrate functionalities of this keyword in java. 

Answer :- 

import java.util.*;

class Method
{
	private int rno;
	private String name;
	
	void SetData(int rno, String name)
	{
		this.rno = rno;
		this.name = name;
	}
	
	void ShowData()
	{
		System.out.println("Roll No :- "+rno);
		System.out.println("Name :- "+name);
	}
}

class Q33
{
	public static void main(String args[])
	{
		Method m1 = new Method();
		m1.SetData(129,"Udit");
		m1.ShowData();
	}
}

***********************************************************************************************************************************************************************
34.	Create a class Circle that has two data members, one to store the radius and another to store area and three methods first init() method to input radius from user, second calculateArea() method to calculate area of circle and third display() method to display values of radius and area. Create class CircleDemo ( main class) that creates the Circle object and calls init(), calculateArea() and display() methods.

Answer :- 

import java.util.*;

class Circle
{
	private double radius;
	private double area;
	
	void init()
	{
		Scanner sc = new Scanner(System.in);
		System.out.print("Entre the Radius of the Circle :- ");
		radius = sc.nextDouble();
	}
	
	void calculateArea()
	{
		area = 3.14 * radius * radius;
	}
	
	void display()
	{
		System.out.println("The Area of Circle with Radius "+radius+" is :- "+area);
	}
}

class Q34
{
	public static void main(String args[])
	{
		Circle c1 = new Circle();
		c1.init();
		c1.calculateArea();
		c1.display();
	}
}

***********************************************************************************************************************************************************************
35.	Create a class MathOperation that has four static methods. add() method that takes two integer numbers as parameter and returns the sum of the numbers. subtract() method that takes two integer numbers as parameter and returns the difference of the numbers. multiply() method that takes two integer numbers as parameter and returns the product. power() method that takes two integer numbers as parameter and returns the power of first number to second number. Create another class Demo (main class) that takes the two numbers from the user and calls all four methods of MathOperation class by providing entered numbers and prints the return values of every method.

Answer :- 

import java.util.*;

class MathOperation
{
	static int add(int a, int b)
	{
		return (a + b);
	}
	
	static int sub(int a, int b)
	{
		return (a - b);
	}
	
	static int mul(int a, int b)
	{
		return (a * b);
	}
	
	static int pow(int a, int b)
	{
		int ab = 1;
		for(int i=1; i<=b; i++)
		{
			ab = ab * a; 
		}
		return ab;
	}
}

class Q35
{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		System.out.print("Entre the 1st Number :- ");
		int a = sc.nextInt();
		System.out.print("Entre the 2nd Number :- ");
		int b = sc.nextInt();
		
		MathOperation m1 = new MathOperation();
		
		System.out.println("Addition :- "+m1.add(a,b));
		System.out.println("Substraction :- "+m1.sub(a,b));
		System.out.println("Multiplication :- "+m1.mul(a,b));
		System.out.println("Power :- "+m1.pow(a,b));
	}
}

***********************************************************************************************************************************************************************
36.	Create a class MathOperation containing overloaded methods ‘multiply’ to calculate multiplication of following arguments. 
 two integers 
 three floats 
 all elements of array 
one double and one integer 

Answer :- 

import java.util.*;

class MathOperation
{
	int mul(int a, int b)
	{
		return (a * b);
	}
	
	double mul(float a, float b, float c)
	{
		return (a * b * c);
	}
	int res = 1;
	int mul(int a[])
	{
		for(int i=0; i<a.length; i++)
		{
				res = res * a[i];
		}
		return res;
	}
	
	double mul(double a, int b)
	{
		return (a*b); 
	}
}

class Q36
{
	public static void main(String args[])
	{
		MathOperation m1 = new MathOperation();
		int arr[] = {1,2,3};
		System.out.println("Two Integer :- "+m1.mul(1,2));
		System.out.println("Three Floats :- "+m1.mul(1,2,3));
		System.out.println("All Elements of Array :- "+m1.mul(arr));
		System.out.println("One double and One integer :- "+m1.mul(1.1,2));
	}
}

***********************************************************************************************************************************************************************
37.	Create a class Person with properties (name and age) with following features. 
Default age of person should be 18.
A person object can be initialized with name and age.
Method to display name and age of person
Create another class PersonDemo ( main class ) that demonstrates the functionalities of Person class by creating Person object and calling methods.

Answer :- 

import java.util.*;

class person
{
	private String name;
	private int age = 18;
	
	person()
	{
		age = 18;
	}
	
	person(String name)
	{
		this.name = name;
	}
	
	person(int age, String name)
	{
		this.age = age;
		this.name = name;
	}
	
	void display()
	{
		System.out.println("Name :- "+name);
		System.out.println("Age :- "+age);
	}
}

class Q37
{
	public static void main(String args[])
	{
		person p1 = new person("Udit");
		person p2 = new person(19,"Ravi");
		
		p1.display();
		
		p2.display();
	}
}

***********************************************************************************************************************************************************************
38.	Create a class Employee with three data members (empNo, salary and totalSalary) and following features.                     
Only 38.	parameterized constructor. [Do not overload the constructor]
totalSalary always represents salary total of all the employees created.
empNo should be auto incremented.
display total employees and totalSalary using a method.
Create another class EmployeeDemo (main class) that creates some Employee objects and calls Employee method to display no. of employees and total of their salaries.

Answer :- 

import java.util.*;

class Employee
{
	static int Empno = 0;
	private double Salary ;
	static double TotalSalary = 0;
	int count = 0;
	
	Employee(double Salary)
	{
		Empno = Empno + 1;
		this.Salary = Salary;
		TotalSalary += Salary;
		count++;
	}
	
	void display()
	{
		System.out.println("Total Employee :- "+Empno);
		System.out.println("Total Salary of All Employee :- "+TotalSalary);
	}
}

class Q38
{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		double sal;
		Employee[] e1 = new Employee[2];
		
		for(int i=0; i<e1.length; i++)
		{
			System.out.print("Employee Salary :- ");
			sal = sc.nextInt();
			e1[i] = new Employee(sal);
		}
		
			e1[0].display();
	}
}

//Not Working

***********************************************************************************************************************************************************************
39.	Create class Product with three data members (pid, price, quantity) and	parameterized constructor that takes values for all three data members.  
Create a main method in different class (say ProductDemo) and perform following task:
a. Accept information for five Product objects from user and store objects in an array
b. Find pid of product with highest price. 
c. Create a static method (with array of product’s object as argument) in Product class to calculate and return total amount spent on all products. ( amount spent on single product = price of product * quantity of product )

Answer :- 

import java.util.*;

class Product
{
	int pid, quantity;
	double price;
	
	Product(int pid, double price, int quantity)
	{
		this.pid = pid;
		this.price = price; 
		this.quantity = quantity;
	}
	void display()
	{
		System.out.println("Pid :- "+pid);
		System.out.println("Price :- "+price);
		System.out.println("Quantity :- "+quantity);
	}
}

class Q39
{
	static void Cal(Product p[])
	{
		for(int i=0; i<p.length; i++)
		{
			System.out.println("Pid :- "+p[i].pid+" Amount Spend :- "+(p[i].price * p[i].quantity));
		}
	}
	
	public static void main(String args[])
	{
		int pid, quantity;
		double price;
		double high = 0;
		
		Scanner sc = new Scanner(System.in); 
		
		Product p[] = new Product[5];
		Product p1[] = new Product[5];
		for(int i=0; i<p.length; i++)
		{
			System.out.print("Enter Product Id :- ");
			pid = sc.nextInt();
			System.out.print("Enter Product Price :- ");
			price = sc.nextDouble();
			System.out.print("Enter Product Quantity :- ");
			quantity = sc.nextInt();
			p[i] = new Product(pid,price,quantity);
		}
		
		for(int i=0; i<p.length; i++)
		{
			p1[i] = p[i];
		}
		
		for(int i=0; i<p.length; i++)
		{
			p1[i].display();
		}
		
		high = p1[0].price;
		
		for(int i=1; i<p1.length; i++)
		{
			if(high < p1[i].price)
			{
				high = p1[i].price;
			}
		}
		
		System.out.println("Product with Highest Price :- ");
		for(int i=0; i<p.length; i++)
		{
			if(high == (p1[i].price))
			{
				p[i].display();
			}
		}
		System.out.println("Total Amount Spend On each Product :- ");
		Cal(p);
	}
}

***********************************************************************************************************************************************************************
40.	Create a class Student having data members name, roll no., age and score. Write a program to accept 10 records of student and store them in an array. And then arrange the student records based on the score group [0-50], [50-65], [65-80], [80-100].

Answer :- 
import java.util.*;

class Student
{
	String name;
	int roll;
	int age;
	int	score;
	
	Student(int roll, String name, int age, int score)
	{
		this.roll = roll;
		this.name = name;
		this.age = age;
		this.score = score;
	}
	
	void display()
	{
		System.out.println(" Roll :- "+roll);
		System.out.println(" Name :- "+name);
		System.out.println(" Age :- "+age);
		System.out.println(" Score :- "+score);
	}
}

class Q40
{
	public static void main(String args[])
	{
		String name;
		int roll, age, score;
		
		Scanner sc = new Scanner(System.in);
		
		Student s[] = new Student[2];
		
		for(int i=0; i<2; i++)
		{
			System.out.print("Enter Roll :- ");
			roll = sc.nextInt();
			System.out.print("Enter Name :- ");
			name = sc.next();
			System.out.print("Enter Age :- ");
			age = sc.nextInt();
			System.out.print("Enter Score :- ");
			score = sc.nextInt();
			s[i] = new Student(roll,name,age,score);
		}
		System.out.println("Group [0-50] :- ");
		for(int i=0; i<2; i++)
		{
			if( s[i].score > 0 && s[i].score <= 50 )
			{
				s[i].display();
			}
		}
		System.out.println("Group [50-65] :- ");
		for(int i=0; i<2; i++)
		{
			if( s[i].score > 50 && s[i].score <= 65 )
			{
				s[i].display();
			}
		}
		System.out.println("Group [65-80] :- ");
		for(int i=0; i<2; i++)
		{
			if( s[i].score > 65 && s[i].score <= 80 )
			{
				s[i].display();
			}
		}
		System.out.println("Group [80-100] :- ");
		for(int i=0; i<2; i++)
		{
			if( s[i].score > 80 && s[i].score <= 100 )
			{
				s[i].display();
			}
		}
	}
}

***********************************************************************************************************************************************************************
41.	Write a program to demonstrate this() construct functionality.

Answer :- 

import java.util.*;

class ThisOperator
{
	private int roll;
	private String name;
	
	ThisOperator()
	{
		this(129,"Udit");
		System.out.println("WithOut Parameter :- ");
		//this.roll = 129;
		//this.name = "Udit";
		
	}
	ThisOperator(int roll, String name)
	{
		System.out.println("With Parameter :- ");
		this.roll = roll;
		this.name = name;
	}
	/*void display()
	{
		System.out.println("Roll :- "+roll);
		System.out.println("Name :- "+name);
	}*/
}

class Q41
{
	public static void main(String args[])
	{
		ThisOperator t1 = new ThisOperator();
		//t1.display();
		
		//ThisOperator t2 = new ThisOperator(97,"Ravi");
		//t2.display();
	}
}

***********************************************************************************************************************************************************************
42.	Create a class Tile to store the edge length of a square tile, and create another class Floor to store length and width of a rectangular floor. Add method totalTiles(Tile t) in Floor class with Tile as argument to calculate the whole number of tiles needed to cover the floor completely.

Answer :- 

import java.util.*;

class Tile
{
	static int TileArea;
	
	public static int Area(int len)
	{
		TileArea = (len * len);
		return TileArea;
	}
}

class Floor extends Tile
{
	int FloorArea, len1, width, t;
	
	Floor(int len, int len1, int width)
	{
		t = Tile.Area(len);
		this.len1 = len1;
		this.width = width;
	}
	
	void Area()
	{
		
		FloorArea = len1 * width;
		System.out.println("Total "+(FloorArea/t)+" Tile's needed to cover an Area Of "+FloorArea+" Square meter.");
	}
}

class Q42
{
	public static void main(String args[])
	{
		Floor f1 = new Floor(2,100,100);
		f1.Area();
	}
}

***********************************************************************************************************************************************************************
43.	Create a class OneBHK with instance variables roomArea, hallArea and price. Then create default constructor that initializes instance variables with some values and a parameterized constructor that takes values for all instance variables and stores them in instance variables. Now create a method named show()  to print OneBHK’s instance variable values.
Create another class TwoBHK which has	(inherites) all the properties and behaviors of OneBHK and a new instance variable room2Area. Then create default constructor to initialize all 4 instance variables and a parameterized constructor to take the values for initialization of all instance variables. Override show() method to print all data member information.
Write main method in another class (Say Demo) and store three TwoBHK flat’s information and print information using show method. Also print total amount of all flats. 

Answer :- 

import java.util.*;

class OneBHK
{
	int roomArea, hallArea, price;
	//static int count = 0; 
	
	OneBHK()
	{
		roomArea = 0;
		hallArea = 0;
		price = 0;
	}
	
	OneBHK(int roomArea, int hallArea, int price)
	{
		this.roomArea = roomArea;
		this.hallArea = hallArea;
		this.price = price;
	}
	
	void show()
	{
		System.out.println("RoomArea :- "+roomArea);
		System.out.println("HallArea :- "+hallArea);
		System.out.println("Price :- "+price);
	}
}

class TwoBHK extends OneBHK
{
	int room2Area;
	static int count1 = 0; 
	
	TwoBHK()
	{
		room2Area = 0;
	}
	
	TwoBHK(int roomArea, int hallArea, int price, int room2Area)
	{
		this.roomArea = roomArea;
		this.hallArea = hallArea;
		this.price = price;
		this.room2Area = room2Area;
		count1 = count1 + price;
	}
	
	void show()
	{
		System.out.println("RoomArea :- "+roomArea);
		System.out.println("HallArea :- "+hallArea);
		System.out.println("Price :- "+price);
		System.out.println("Room2Area :- "+room2Area);
	}
	
	void display()
	{
		System.out.println("The Total Amount of All TwoBHK Flat's are :- "+count1);
	}
}

class Q43
{
	public static void main(String args[])
	{
		TwoBHK t1 = new TwoBHK(10,20,30,40);
		TwoBHK t2 = new TwoBHK(10,20,30,40);
		TwoBHK t3 = new TwoBHK(10,20,30,40);
		t2.show();
		t2.show();
		t2.show();
		t2.display();
	}
}

***********************************************************************************************************************************************************************

