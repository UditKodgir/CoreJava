                                                              Assignment 6
                                                              

*************************************************************************************************************************************************************************
48.	Create an Abstract class Processor with int member variable data  and method showData to display data value. Create abstract method process() to define processing of member data. Create a class  Factorial using abstract class Processor  to calculate and print factorial of a number by overriding the process method. b. Create a class Circle using abstract class Processor to calculate and print area of a circle by overriding the process method.Ask user to enter choice (factorial or circle area).  Also ask data to work upon. Use Processor class rence to achieve this mechanism.

Answer :- 

import java.util.*;

abstract class Processor
{
	int data;
	
	Processor()
	{}
	
	void show()
	{
		System.out.println(" Data :- "+data);
	}
	
	abstract void process(int data);
}

class Factorial extends Processor
{
	void process(int data)
	{
		int fact = 1;
		for(int i=1; i<=data; i++)
		{
			fact *= i;
		}
		System.out.println(" Factorial :- "+fact);
		this.data = data;
	}
}

class Circle extends Processor
{
	void process(int data)
	{
		double res = (double) (3.14 * data * data);
		System.out.println(res);
		this.data = data;
	}
}

class Q48
{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		int data;
		System.out.print(" 1. Factorial. \n 2. Area of Circle. \n Enter the Choise :- ");
		int ch = sc.nextInt();
		
		switch(ch)
		{
			case 1 : System.out.print(" Enter Data Value :- ");
					data = sc.nextInt();
					Processor p1 = new Factorial();
					p1.process(data);
					p1.show();
					break;
					
			case 2 : System.out.print(" Enter the Radius :- ");
					data = sc.nextInt();
					Processor p2 = new Circle();
					p2.process(data);
					p2.show();
					break;
					
			default : System.out.println("Invalid Entry.");
					break;
		}
	}
}

*************************************************************************************************************************************************************************
49.	Create Interface Taxable with members salesTax=7% and incomeTax=10.5%. create abstract method calcTax(). a. Create class Employee(empId,name,salary) and implement Taxable to calculate incomeTax on yearly salary. b. Create class Product(pid,price,quantity) and implement Taxable to calculate salesTax on unit price of product. c. Create class for main method(Say XYZ), accept employee information and a product information from user and print income tax and sales tax respectively.

Answer :- 

import java.util.*;

interface Taxable
{
	double saleTax = 0.07, incomeTax = 0.105;
	
	abstract void calTax();
}

class Employee implements Taxable
{
	int empId;
	String name;
	double salary;
	
	Employee()
	{}
	
	Employee(int empId, String name, double salary)
	{
		this.empId = empId;
		this.name = name;
		this.salary = salary;
	}
	
	public void calTax()
	{
		double incomeTax1 = (salary * incomeTax);
		System.out.println(" Employee Id :- "+empId);
		System.out.println(" Employee Name :- "+name);
		System.out.println(" Salary :- "+salary);
		System.out.println(" Income Tax :- "+incomeTax1);
	}
}

class Product implements Taxable
{
	int pid, quantity;
	double price;
	
	Product()
	{}
	
	Product(int pid, double price, int quantity)
	{
		this.pid = pid;
		this.price = price;
		this.quantity = quantity;
	}
	
	public void calTax()
	{
		double incomeTax1 = (price * saleTax);
		System.out.println(" Product Id :- "+pid);
		System.out.println(" Price :- "+price);
		System.out.println(" Quantity :- "+quantity);
		System.out.println(" Income Tax :- "+incomeTax1);
		System.out.println(" Total Income Tax :- "+(incomeTax1*quantity));
	}
}

class Q49
{
	public static void main(String args[])
	{
	
		System.out.println("Employee Data :- ");
		
		Taxable t1 = new Employee(1,"Udit",10000);
		t1.calTax();
		
		System.out.println("Product Data :- ");
		
		Taxable t2 = new Product(1,10000,100);
		t2.calTax();
	
	}
}

*************************************************************************************************************************************************************************
